import math
import random
import gmpy2

import matplotlib.scale
from mpl_toolkits import mplot3d
from mpl_toolkits.mplot3d import Axes3D
import numpy as np
from scipy.optimize import curve_fit
import matplotlib.pyplot as plt
from modules import ecmtimes
import matplotlib.ticker as mticker


# My axis should display 10⁻¹ but you can switch to e-notation 1.00e+01
def log_tick_formatter(val, pos=None):
    return f"$10^{{{int(val)}}}$"  # remove int() if you don't use MaxNLocator
    # return f"{10**val:.2e}"      # e-Notation

b1s = [10000,11000,12000,13000,14000,15000,16000,17000,18000,19000,20000,21000,22000,23000,24000,25000,26000,27000,28000,29000,30000,31000,32000,33000,34000,35000,36000,37000,38000,39000,40000,41000,42000,43000,44000,45000,46000,47000,48000,49000,50000,51000,52000,53000,54000,55000,56000,57000,58000,59000,60000,61000,62000,63000,64000,65000,66000,67000,68000,69000,70000,71000,72000,73000,74000,75000,76000,77000,78000,79000,80000,81000,82000,83000,84000,85000,86000,87000,88000,89000,90000,91000,92000,93000,94000,95000,96000,97000,98000,99000,100000,110000,120000,130000,140000,150000,160000,170000,180000,190000,200000,210000,220000,230000,240000,250000,260000,270000,280000,290000,300000,310000,320000,330000,340000,350000,360000,370000,380000,390000,400000,410000,420000,430000,440000,450000,460000,470000,480000,490000,500000,510000,520000,530000,540000,550000,560000,570000,580000,590000,600000,610000,620000,630000,640000,650000,660000,670000,680000,690000,700000,710000,720000,730000,740000,750000,760000,770000,780000,790000,800000,810000,820000,830000,840000,850000,860000,870000,880000,890000,900000,910000,920000,930000,940000,950000,960000,970000,980000,990000,1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,6400000,6500000,6600000,6700000,6800000,6900000,7000000,7100000,7200000,7300000,7400000,7500000,7600000,7700000,7800000,7900000,8000000,8100000,8200000,8300000,8400000,8500000,8600000,8700000,8800000,8900000,9000000,9100000,9200000,9300000,9400000,9500000,9600000,9700000,9800000,9900000,10000000,11000000,12000000,13000000,14000000,15000000,16000000,17000000,18000000,19000000,20000000,21000000,22000000,23000000,24000000,25000000,26000000,27000000,28000000,29000000,30000000,31000000,32000000,33000000,34000000,35000000,36000000,37000000,38000000,39000000,40000000,41000000,42000000,43000000,44000000,45000000,46000000,47000000,48000000,49000000,50000000,51000000,52000000,53000000,54000000,55000000,56000000,57000000,58000000,59000000,60000000,61000000,62000000,63000000,64000000,65000000,66000000,67000000,68000000,69000000,70000000,71000000,72000000,73000000,74000000,75000000,76000000,77000000,78000000,79000000,80000000,81000000,82000000,83000000,84000000,85000000,86000000,87000000,88000000,89000000,90000000,91000000,92000000,93000000,94000000,95000000,96000000,97000000,98000000,99000000,100000000,110000000,120000000,130000000,140000000,150000000,160000000,170000000,180000000,190000000,200000000,210000000,220000000,230000000,240000000,250000000,260000000,270000000,280000000,290000000,300000000,310000000,320000000,330000000,340000000,350000000,360000000,370000000,380000000,390000000,400000000,410000000,420000000,430000000,440000000,450000000,460000000,470000000,480000000,490000000,500000000,510000000,520000000,530000000,540000000,550000000,560000000,570000000,580000000,590000000,600000000,610000000,620000000,630000000,640000000,650000000,660000000,670000000,680000000,690000000,700000000,710000000,720000000,730000000,740000000,750000000,760000000,770000000,780000000,790000000,800000000,810000000,820000000,830000000,840000000,850000000,860000000,870000000,880000000,890000000,900000000,910000000,920000000,930000000,940000000,950000000,960000000,970000000,980000000,990000000]
b1s_2 = [1000000,1100000,1200000,1300000,1400000,1500000,1600000,1700000,1800000,1900000,2000000,2100000,2200000,2300000,2400000,2500000,2600000,2700000,2800000,2900000,3000000,3100000,3200000,3300000,3400000,3500000,3600000,3700000,3800000,3900000,4000000,4100000,4200000,4300000,4400000,4500000,4600000,4700000,4800000,4900000,5000000,5100000,5200000,5300000,5400000,5500000,5600000,5700000,5800000,5900000,6000000,6100000,6200000,6300000,6400000,6500000,6600000,6700000,6800000,6900000,7000000,7100000,7200000,7300000,7400000,7500000,7600000,7700000,7800000,7900000,8000000,8100000,8200000,8300000,8400000,8500000,8600000,8700000,8800000,8900000,9000000,9100000,9200000,9300000,9400000,9500000,9600000,9700000,9800000,9900000,10000000,11000000,12000000,13000000,14000000,15000000,16000000,17000000,18000000,19000000,20000000,21000000,22000000,23000000,24000000,25000000,26000000,27000000,28000000,29000000,30000000,31000000,32000000,33000000,34000000,35000000,36000000,37000000,38000000,39000000,40000000,41000000,42000000,43000000,44000000,45000000,46000000,47000000,48000000,49000000,50000000,51000000,52000000,53000000,54000000,55000000,56000000,57000000,58000000,59000000,60000000,61000000,62000000,63000000,64000000,65000000,66000000,67000000,68000000,69000000,70000000,71000000,72000000,73000000,74000000,75000000,76000000,77000000,78000000,79000000,80000000,81000000,82000000,83000000,84000000,85000000,86000000,87000000,88000000,89000000,90000000,91000000,92000000,93000000,94000000,95000000,96000000,97000000,98000000,99000000,100000000,110000000,120000000,130000000,140000000,150000000,160000000,170000000,180000000,190000000,200000000,210000000,220000000,230000000,240000000,250000000,260000000,270000000,280000000,290000000,300000000,310000000,320000000,330000000,340000000,350000000,360000000,370000000,380000000,390000000,400000000,410000000,420000000,430000000,440000000,450000000,460000000,470000000,480000000,490000000,500000000,510000000,520000000,530000000,540000000,550000000,560000000,570000000,580000000,590000000,600000000,610000000,620000000,630000000,640000000,650000000,660000000,670000000,680000000,690000000,700000000,710000000,720000000,730000000,740000000,750000000,760000000,770000000,780000000,790000000,800000000,810000000,820000000,830000000,840000000,850000000,860000000,870000000,880000000,890000000,900000000,910000000,920000000,930000000,940000000,950000000,960000000,970000000,980000000,990000000]

def curve_function(data, d, e, f, h, i, j):
    digits = data[0]
    b1 = data[1]
    return d * pow(e, b1 * f) + h * pow(i, digits * b1 * j)

digits_data = []
b1_data = []
time_data = []

for digits in range(100, 500, 1):
    for b1 in b1s:
        time = ecmtimes.get_ecm_time(digits, b1, 1, 1)
        digits_data.append(digits)
        b1_data.append(math.log10(b1))
        time_data.append(time)

parameters, covariance = curve_fit(curve_function, [digits_data, b1_data], time_data, bounds=([-np.inf, -np.inf, -np.inf, -np.inf, -np.inf, -np.inf], [np.inf, np.inf, np.inf, np.inf, np.inf, np.inf]))

model_digits_data = np.linspace(min(digits_data), 600)#max(digits_data))
model_b1_data = np.linspace(min(b1_data), max(b1_data))

X, Y = np.meshgrid(model_digits_data, model_b1_data)
Z = curve_function(np.array([X, Y]), *parameters)


fig = plt.figure()

ax = fig.add_subplot(projection='3d')
# ax = Axes3D(fig)
ax.plot_surface(X, Y, Z)
for digits in range(100, 500, 1):
    for b1 in b1s:
        if random.random() > .999:
            time = ecmtimes.get_ecm_time(digits, b1, 1, 1)
            ax.scatter(digits, gmpy2.log10(b1), time, marker="o")

ax.set_xlabel('numdigits')
ax.set_ylabel('b1')
ax.set_zlabel('completion time (s)')

ax.yaxis.set_major_formatter(mticker.FuncFormatter(log_tick_formatter))
ax.yaxis.set_major_locator(mticker.MaxNLocator(integer=True))
print(*parameters)
plt.show(block=True)
